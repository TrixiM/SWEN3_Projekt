version: "3.9"

services:
  rest:
    build:
      context: ./backend
      dockerfile: DOCKERFILE.REST
    container_name: rest-server
    restart: always
#    environment:
 #     DATABASE_HOST: postgres
  #    DATABASE_PORT: 5432
   #   DATABASE_NAME: documentdb
    #  DATABASE_USER: myuser
     # DATABASE_PASSWORD: mypassword
    ports:
      - "8080:8080"
    depends_on:
      - postgres
    networks:
      - app-network

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: frontend
    restart: always
    ports:
      - "80:80"
    depends_on:
      - rest
    networks:
      - app-network

  postgres:
    image: postgres:16
    container_name: postgres
    restart: always
    environment:
      POSTGRES_USER: myuser
      POSTGRES_PASSWORD: mypassword
      POSTGRES_DB: documentdb
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - app-network

  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: pgadmin
    restart: always
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: adminpassword
    ports:
      - "5050:80"
    depends_on:
      - postgres
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    networks:
      - app-network

  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    restart: always
    ports:
      - "5672:5672"
      - "15672:15672"
    networks:
      - app-network

  ocr-worker:
    build:
      context: ./ocr-worker
      dockerfile: DOCKERFILE.OCR
    container_name: ocr-worker
    restart: always
    depends_on:
      - rabbitmq
    environment:
      SPRING_RABBITMQ_HOST: rabbitmq
      SPRING_RABBITMQ_PORT: 5672
    networks:
      - app-network


networks:
  app-network:
    driver: bridge

volumes:
  postgres_data:
  pgadmin_data:
