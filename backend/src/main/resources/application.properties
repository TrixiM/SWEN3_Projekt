server.port=8080


# Database
spring.datasource.url=jdbc:postgresql://postgres/documentdb
spring.datasource.username=myuser
spring.datasource.password=mypassword


# JPA / Hibernate
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true


# File upload size limits
spring.servlet.multipart.max-file-size=100MB
spring.servlet.multipart.max-request-size=100MB


# RabbitMQ
spring.rabbitmq.host=rabbitmq
spring.rabbitmq.port=5672
spring.rabbitmq.username=guest
spring.rabbitmq.password=guest


# Logging Configuration
# Root logging level
logging.level.root=INFO

# Application-specific logging
logging.level.fhtw.wien=DEBUG
logging.level.fhtw.wien.controller=INFO
logging.level.fhtw.wien.service=INFO
logging.level.fhtw.wien.business=DEBUG
logging.level.fhtw.wien.messaging=INFO
logging.level.fhtw.wien.exception=WARN

# Spring Framework logging
logging.level.org.springframework.web=INFO
logging.level.org.springframework.amqp=INFO
logging.level.org.hibernate.SQL=DEBUG
logging.level.org.hibernate.type.descriptor.sql.BasicBinder=TRACE

# Log pattern
logging.pattern.console=%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{36} - %msg%n
logging.pattern.file=%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{36} - %msg%n

# Optional: Log file configuration (commented out by default)
# logging.file.name=logs/application.log
# logging.file.max-size=10MB
# logging.file.max-history=30


# Resilience4j Circuit Breaker Configuration
resilience4j.circuitbreaker.instances.minioService.sliding-window-size=10
resilience4j.circuitbreaker.instances.minioService.failure-rate-threshold=50
resilience4j.circuitbreaker.instances.minioService.wait-duration-in-open-state=30s
resilience4j.circuitbreaker.instances.minioService.permitted-number-of-calls-in-half-open-state=3
resilience4j.circuitbreaker.instances.minioService.automatic-transition-from-open-to-half-open-enabled=true
resilience4j.circuitbreaker.instances.minioService.minimum-number-of-calls=5

# Resilience4j Retry Configuration for MinIO
resilience4j.retry.instances.minioService.max-attempts=3
resilience4j.retry.instances.minioService.wait-duration=1s
resilience4j.retry.instances.minioService.enable-exponential-backoff=true
resilience4j.retry.instances.minioService.exponential-backoff-multiplier=2
resilience4j.retry.instances.minioService.retry-exceptions=java.io.IOException,io.minio.errors.MinioException

# Resilience4j Bulkhead Configuration
resilience4j.bulkhead.instances.minioService.max-concurrent-calls=10
resilience4j.bulkhead.instances.minioService.max-wait-duration=5s

# Resilience4j Time Limiter (for async operations)
resilience4j.timelimiter.instances.minioService.timeout-duration=60s
resilience4j.timelimiter.instances.minioService.cancel-running-future=true


# Spring Boot Actuator Health Endpoint Configuration
management.endpoints.web.exposure.include=health,info
management.endpoint.health.show-details=when-authorized
management.endpoint.health.probes.enabled=true
management.health.livenessState.enabled=true
management.health.readinessState.enabled=true
